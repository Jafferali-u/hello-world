currentBuild.displayName = "Test-Pipeline-#"+currentBuild.number
pipeline{ 
  agent any   
    environment{
        PATH = "/opt/maven3/bin:$PATH"
    }
  stages{

       stage("code check"){
            steps{
                withSonarQubeEnv('sonar') {
                    sh "mvn sonar:sonar"
                }
                timeout(time: 2, unit: 'MINUTES') 
                {
                    def qg = waitForQualityGate()
                    if (qg.status != 'OK') {
                        currentBuild.result = 'UNSTABLE'
                    else
                        currentBuild.result = 'OKAY'
                        }
                    }
            }
        stage("mevan build"){
            steps {
                sh "mvn clean package"
            }
        }
        stage("file share"){
            steps{
                sshagent(['srcjenkins']) {
                    sh """
                    scp -o StrictHostKeyChecking=no webapp/target/webapp.war srcjenkins@172.31.57.87:/opt/docker/jenkinsfile-test/                   
                    """
                }
            }
        }
        stage("deploy"){
            steps{
                sshagent(['ansadmin_ansible']) {
                    sh """
                    ssh -o StrictHostKeyChecking=no ansadmin@172.31.63.160 ansible-playbook jenkins-pipeline-container.yaml
                    """
                }
            }
        }
    }
}
